import { MiddlewarePayload, MiddlewareStatusChain } from './types';
export default class MiddlewareStatus<T> {
    middlewares: MiddlewarePayload<T, MiddlewareStatusChain>[];
    stack: Function;
    /**
     * Constructor
     */
    constructor(middlewares?: MiddlewarePayload<T, MiddlewareStatusChain>[]);
    /**
     * Returns custom tag
     */
    readonly [Symbol.toStringTag]: string;
    /**
     * Returns count middleware in chain
     */
    readonly length: number;
    /**
     * Adds middlewares
     */
    use(middlewares: MiddlewarePayload<T, MiddlewareStatusChain>[] | MiddlewarePayload<T, MiddlewareStatusChain>): this;
    /**
     * Launches the middleware chain
     */
    run(context: T): Promise<MiddlewareStatusChain>;
}
